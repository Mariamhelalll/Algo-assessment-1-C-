using System;
using System.IO;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        //assigning the file paths of the required files to a string list
        string[] filePaths = {"Share_1_256.txt","Share_2_256.txt", "Share_3_256.txt"};
        foreach (string filePath in filePaths)
        { 
            OperateFile(filePath);

        } 
    }

    static void OperateFile(string filePath)
    {
        int [] Array = AssignFileToArray(filePath);
        if (Array.Length>0)
        {
            Console.WriteLine("File is found and read successfully !");
            for (int i =0 ; i <Math.Min (5, Array.Length); i++)
            {
                Console.WriteLine (Array[i]);
            }
        }

        else
        {
            Console.WriteLine("No suitable data found in the file !");
        }

    }


        

        
    

    static int[] AssignFileToArray(string filePath)
    {
        List<int> list = new List <int>(); // stores integers dynamically

        try
        {
            if (!File.Exists(filePath))
            {
                Console.WriteLine($"Error: file {filePath} not found");
                return new int [0]; // Return empty array to prevent crashes.

            }

            using (StreamReader sr = new StreamReader(filePath)) // for reading the file line by line.
            {
                string line;
                while ((line =sr.ReadLine()) !=null) // reads one line at a time until the end of the file.
                {
                    if (int.TryParse(line.Trim(), out int value)) // While handling errors, it converts any char/string into integers.
                    {
                        list.Add(value);
                    }

                    else
                    {
                        Console.WriteLine($"Warning: Skipping in valid value '{line}' in file.");

                    }
                }
            }

            return list.ToArray(); // converts the dynamic List<int> into a fixed sized array int[]
        }

        catch (Exception ex)
        {
            Console.WriteLine($"Error in reading file : {ex.Message}");
            return new int [0]; // Return empty array to prevent crashes
        }
    }

}